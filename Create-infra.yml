# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- manual

variables:

  - name: ServiceConnection
    value: 'Azure subscription 1(85f9051c-3d5f-4da3-bc26-5660c9b51169)'

  - name: ResourceGroupName
    value: 'terraformbackend'

  - name: StorageAccountName
    value: 'terraform14586'

  - name: ContainerName
    value: 'tfstate'

  - name: Key
    value: 'dev.terraform.tfstate'

  - name: SubscriptionID
    value: '85f9051c-3d5f-4da3-bc26-5660c9b51169'

  - name: vmImangeName
    value: 'ubuntu-latest'

stages:
  - stage: Plan
    jobs:
      - job: Plan
        pool:
         vmImage: '${vmImangeName}'
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: ${ServiceConnection}
              backendAzureRmOverrideSubscriptionID: ${SubscriptionID}
              backendAzureRmResourceGroupName:  ${ResourceGroupName}
              backendAzureRmStorageAccountName: ${StorageAccountName}
              backendAzureRmContainerName: ${ContainerName}
              backendAzureRmKey: ${Key}

          - task: TerraformTask@5
            displayName: Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: ${ServiceConnection}
              environmentAzureRmOverrideSubscriptionID: ${SubscriptionID}

      
  - stage: Create
    jobs:
      - job: Create
        pool:
          vmImage: ${vmImangeName}
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: ${ServiceConnection}
              backendAzureRmOverrideSubscriptionID: ${SubscriptionID}
              backendAzureRmResourceGroupName: '${ResourceGroupName}'
              backendAzureRmStorageAccountName: '${StorageAccountName}'
              backendAzureRmContainerName:  '${ContainerName}'
              backendAzureRmKey: '${Key}'

          - task: TerraformTask@5
            displayName: Terraform Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '--auto-approve'
              environmentServiceNameAzureRM: ${ServiceConnection}
              environmentAzureRmOverrideSubscriptionID: ${SubscriptionID}

          

